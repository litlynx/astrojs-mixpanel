---
// Example Astro component showing how to use Mixpanel tracking
---

<html lang="en">
<head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Astro Mixpanel Example</title>
</head>
<body>
    <main>
        <h1>Astro Mixpanel Integration Example</h1>

        <section>
            <h2>Basic Tracking</h2>
            <button onclick="track('Custom Button Clicked', { button_name: 'Track Custom Event', timestamp: new Date().toISOString(), page: 'example' }); alert('Custom event tracked!');">
                Track Custom Event
            </button>
            <button onclick="const userId = `user_${Date.now()}`; identify(userId, { name: 'Example User', email: 'user@example.com', signup_date: new Date().toISOString() }); alert(`User identified as: ${userId}`);">
                Identify User
            </button>
            <button onclick="trackPageView({ custom_property: 'manual_tracking', section: 'example' }); alert('Page view tracked!');">
                Track Page View
            </button>
        </section>

        <section>
            <h2>Inline Event Handlers</h2>
            <button onclick="track('Inline Event', { method: 'inline', timestamp: new Date().toISOString() }); alert('Inline event tracked!');">
                Track Event (Inline)
            </button>
            <button onclick="setUserProperties({ inline_interaction: true }); alert('User properties set via inline handler!');">
                Set Properties (Inline)
            </button>
            <button onclick="if(confirm('Reset user data?')) { reset(); alert('User reset via inline handler!'); }">
                Reset User (Inline)
            </button>
        </section>

        <section>
            <h2>Astro Component Example</h2>
            <button onclick="mixpanel.track('Astro Component Button Clicked', { source: 'example_component' }); alert('Astro component event tracked!');">
                Track Astro Component Event
            </button>

            <button onclick="mixpanel.identify('astro_component_user', { name: 'Astro User', email: 'astro@example.com' }); alert('Astro component user identified!');">
                Identify Astro Component User
            </button>

            <button onclick="mixpanel.trackPageView({ component: 'AstroExample', custom_property: 'astro_tracking' }); alert('Astro component page view tracked!');">
                Track Astro Component Page View
            </button>
        </section>

        <section>
            <h2>E-commerce Example</h2>
            <button onclick="track('Product Viewed', { product_id: 'EXAMPLE_SKU_123', product_name: 'Example Product', category: 'Electronics', price: 99.99, currency: 'USD' }); alert('Product view tracked!');">
                View Product
            </button>
            <button onclick="track('Product Added to Cart', { product_id: 'EXAMPLE_SKU_123', quantity: 1, price: 99.99, cart_total: 99.99 }); alert('Add to cart tracked!');">
                Add to Cart
            </button>
            <button onclick="track('Purchase Completed', { order_id: `ORDER_${Date.now()}`, total: 99.99, currency: 'USD', items: ['EXAMPLE_SKU_123'], payment_method: 'credit_card' }); alert('Purchase tracked!');">
                Complete Purchase
            </button>
        </section>

        <section>
            <h2>User Management</h2>
            <button id="set-props-btn">Set User Properties</button>
            <button id="increment-btn">Increment Counter</button>
            <button id="reset-btn">Reset User</button>
        </section>
    </main>

    <script>
        // Import Mixpanel client functions
        import {
            track,
            identify,
            trackPageView,
            setUserProperties,
            incrementUserProperties,
            reset,
            registerGlobalProperties,
            getDistinctId
        } from '../../../src/client.js';

        // Basic tracking examples
        // Now handled with inline onclick handlers above

        // E-commerce tracking examples
        // Now handled with inline onclick handlers above

        // User management examples
        document.getElementById('set-props-btn')?.addEventListener('click', () => {
            setUserProperties({
                subscription_tier: 'premium',
                preferences: {
                    theme: 'dark',
                    notifications: true
                },
                last_active: new Date().toISOString()
            });
            alert('User properties set!');
        });

        document.getElementById('increment-btn')?.addEventListener('click', () => {
            incrementUserProperties({
                page_views: 1,
                button_clicks: 1
            });
            alert('User properties incremented!');
        });

        document.getElementById('reset-btn')?.addEventListener('click', () => {
            if (confirm('Are you sure you want to reset user data?')) {
                reset();
                alert('User data reset!');
            }
        });

        // Set some global properties
        registerGlobalProperties({
            page_type: 'example',
            feature_flag: 'new_ui_enabled'
        });

        // Log the current distinct ID
        console.log('Current distinct ID:', getDistinctId());
    </script>

    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 2rem;
            line-height: 1.6;
        }

        section {
            margin-bottom: 2rem;
            padding: 1rem;
            border: 1px solid #ddd;
            border-radius: 8px;
        }

        button {
            margin: 0.5rem;
            padding: 0.5rem 1rem;
            background: #0066cc;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        button:hover {
            background: #0052a3;
        }

        h1 {
            color: #333;
            text-align: center;
        }

        h2 {
            color: #666;
            border-bottom: 2px solid #0066cc;
            padding-bottom: 0.5rem;
        }
    </style>
</body>
</html>
